name: Build, Test, and Push to DockerHub & GHCR

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - 'backend/**'
      - '.github/workflows/**'

concurrency:
  group: "ci-build-${{ matrix.service }}"
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [frontend, backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        if: matrix.service == 'backend'
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          echo "✅ Dependencies installed"

      - name: Run unit tests and linting
        if: matrix.service == 'backend'
        run: |
          pip install pytest flake8 httpx
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest backend/tests --junitxml=test-results.xml || true
          flake8 backend
          echo "✅ Tests and linting complete"

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/feedback-${{ matrix.service }}:latest ./${{ matrix.service }}
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/feedback-${{ matrix.service }}:latest ./${{ matrix.service }}

      - name: Security scan using Trivy
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/feedback-${{ matrix.service }}:latest
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GH_PAT }}

      - name: Push to DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/feedback-${{ matrix.service }}:latest

      - name: Push to GHCR
        run: docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/feedback-${{ matrix.service }}:latest

  ### ✅ Pause here for QA approval
  wait-for-qa:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment:
      name: qa-approval
      url: https://qa.example.com
    steps:
      - name: Wait for QA approval
        run: echo "✅ QA must approve this before proceeding."
